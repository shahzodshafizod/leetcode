package heaps

import (
	"testing"

	"github.com/stretchr/testify/assert"
)

// go test -v -count=1 ./heaps/ -run ^TestMostBooked$
func TestMostBooked(t *testing.T) {
	for _, tc := range []struct {
		n        int
		meetings [][]int
		count    int
	}{
		{n: 2, meetings: [][]int{{0, 10}, {1, 5}, {2, 7}, {3, 4}}, count: 0},
		{n: 3, meetings: [][]int{{1, 20}, {2, 10}, {3, 5}, {4, 9}, {6, 8}}, count: 1},
		{n: 100, meetings: [][]int{{0, 5}, {1, 6}, {2, 7}, {3, 8}, {4, 9}, {5, 10}, {6, 11}, {7, 12}, {8, 13}, {9, 14}, {10, 15}, {11, 16}, {12, 17}, {13, 18}, {14, 19}, {15, 20}, {16, 21}, {17, 22}, {18, 23}, {19, 24}, {20, 25}, {21, 26}, {22, 27}, {23, 28}, {24, 29}, {25, 30}, {26, 31}, {27, 32}, {28, 33}, {29, 34}}, count: 0},
		{n: 1, meetings: [][]int{{1517, 28248}}, count: 0},
		// {n: 100, meetings: [][]int{{1, 318}, {2, 857}, {3, 990}, {4, 954}, {5, 366}, {6, 943}, {7, 389}, {8, 841}, {9, 857}, {10, 714}, {11, 368}, {12, 612}, {13, 980}, {14, 735}, {15, 686}, {16, 382}, {17, 806}, {18, 548}, {19, 898}, {20, 951}, {21, 517}, {22, 482}, {23, 412}, {24, 682}, {25, 512}, {26, 320}, {27, 212}, {28, 354}, {29, 515}, {30, 794}, {31, 445}, {32, 625}, {33, 458}, {34, 277}, {35, 276}, {36, 733}, {37, 366}, {38, 277}, {39, 447}, {40, 822}, {41, 961}, {42, 850}, {43, 871}, {44, 717}, {45, 761}, {46, 710}, {47, 379}, {48, 946}, {49, 746}, {50, 595}, {51, 538}, {52, 932}, {53, 263}, {54, 416}, {55, 213}, {56, 354}, {57, 203}, {58, 718}, {59, 356}, {60, 921}, {61, 691}, {62, 469}, {63, 719}, {64, 858}, {65, 522}, {66, 856}, {67, 555}, {68, 929}, {69, 233}, {70, 941}, {71, 215}, {72, 827}, {73, 409}, {74, 629}, {75, 874}, {76, 511}, {77, 520}, {78, 809}, {79, 338}, {80, 677}, {81, 640}, {82, 577}, {83, 489}, {84, 437}, {85, 243}, {86, 781}, {87, 697}, {88, 908}, {89, 276}, {90, 988}, {91, 648}, {92, 522}, {93, 790}, {94, 724}, {95, 387}, {96, 860}, {97, 245}, {98, 208}, {99, 353}, {100, 101}, {101, 102}, {102, 105}, {103, 104}}, count: 99},
		// {n: 2, meetings: [][]int{{16, 962}, {85, 695}, {6, 706}, {53, 716}, {21, 82}, {58, 634}, {51, 617}, {87, 442}, {15, 84}, {19, 265}, {72, 1064}, {90, 731}, {57, 689}, {30, 317}, {69, 955}, {54, 227}, {56, 357}, {11, 369}, {99, 800}, {9, 114}, {36, 314}, {96, 435}, {41, 839}, {28, 664}, {34, 364}, {95, 518}, {77, 971}, {75, 781}, {32, 335}, {2, 664}, {66, 1005}, {83, 989}, {37, 452}, {88, 189}, {42, 700}, {97, 197}, {76, 931}, {84, 203}, {60, 776}, {45, 930}, {93, 740}, {61, 111}, {55, 906}, {43, 343}, {29, 184}, {92, 140}, {25, 474}, {18, 462}, {86, 449}, {44, 315}, {94, 216}, {3, 440}, {26, 289}, {47, 177}, {78, 659}, {91, 1026}, {65, 968}, {50, 1042}, {12, 256}, {49, 180}, {10, 72}, {73, 1033}, {17, 745}, {4, 341}, {71, 968}, {31, 933}, {40, 834}, {5, 475}, {80, 928}, {8, 124}, {22, 767}, {81, 421}, {24, 164}, {20, 948}, {89, 282}, {27, 274}, {7, 473}, {59, 541}, {13, 717}, {82, 386}, {46, 403}, {1, 483}, {38, 720}, {23, 387}, {62, 830}, {70, 315}, {48, 449}, {79, 424}, {68, 949}, {52, 977}, {14, 832}, {39, 479}, {64, 1002}, {63, 277}, {33, 690}, {35, 434}, {74, 262}, {98, 466}, {67, 450}}, count: 0},
		// {n: 50, meetings: [][]int{{5600, 5940}, {4000, 4917}, {12900, 13667}, {500, 1275}, {5400, 5862}, {14600, 15423}, {3400, 3709}, {10900, 11233}, {4500, 5285}, {14500, 15171}, {1100, 1374}, {7000, 7723}, {9400, 10264}, {4700, 4942}, {2800, 3038}, {11500, 12202}, {14400, 14739}, {13500, 14443}, {13600, 14186}, {12300, 12791}, {7500, 8311}, {8300, 8939}, {7600, 8411}, {600, 1216}, {8500, 9315}, {7200, 7657}, {6500, 7428}, {3600, 4222}, {13100, 14030}, {4200, 5177}, {11200, 11863}, {4900, 5710}, {2200, 2867}, {800, 1290}, {300, 736}, {4800, 5628}, {5200, 5920}, {7300, 7912}, {1000, 1760}, {12200, 13013}, {3000, 3472}, {14200, 14938}, {3500, 3763}, {400, 868}, {6800, 7344}, {12000, 12974}, {8900, 9653}, {700, 1593}, {9800, 10430}, {13200, 13968}, {14900, 15583}, {100, 1002}, {6400, 7295}, {9200, 9903}, {2300, 3123}, {12800, 13148}, {12400, 13104}, {5500, 6395}, {6200, 6938}, {3700, 3964}, {8600, 8832}, {6700, 6938}, {11300, 11747}, {2900, 3828}, {1300, 1653}, {11600, 12490}, {3200, 3499}, {1900, 2872}, {8400, 9092}, {1800, 2513}, {10800, 11489}, {3100, 3601}, {5300, 5526}, {11000, 11359}, {4300, 5139}, {7400, 7865}, {6300, 6687}, {10200, 10561}, {13300, 13603}, {9600, 10111}, {10400, 10953}, {900, 1875}, {3800, 4068}, {2000, 2755}, {13900, 14538}, {1400, 1799}, {12100, 12957}, {1500, 1875}, {11700, 12376}, {4600, 4993}, {4100, 4590}, {10000, 10402}, {2500, 3042}, {11800, 12754}, {5800, 6140}, {8200, 9027}, {6900, 7286}, {11400, 12185}, {5700, 6678}, {9100, 9316}, {13800, 14029}, {10500, 11493}, {12500, 13052}, {9000, 9345}, {8800, 9691}, {200, 683}, {9700, 10484}, {7100, 8067}, {2400, 2767}, {9900, 10371}, {11900, 12699}, {6600, 7077}, {14800, 15541}, {14300, 15170}, {9500, 10282}, {13000, 13578}, {11100, 12055}, {10300, 10525}, {5900, 6176}, {13700, 14436}, {6100, 6731}, {4400, 4988}, {10700, 11189}, {1600, 2413}, {2700, 3492}, {7700, 7908}, {12700, 13158}, {8100, 8616}, {9300, 9584}, {13400, 14003}, {3300, 3859}, {2100, 3030}, {3900, 4511}, {14700, 14925}, {1700, 1987}, {7800, 8626}, {8000, 8681}, {14000, 14660}, {5000, 5702}, {8700, 9287}, {5100, 5378}, {6000, 6902}, {7900, 8671}, {10100, 10334}, {12600, 12910}, {2600, 3222}, {14100, 14792}, {1200, 1706}, {10600, 11410}}, count: 2},
		// {n: 100, meetings: [][]int{{107, 100000}, {56, 100000}, {45, 100000}, {52, 100000}, {95, 100000}, {14, 100000}, {64, 100000}, {37, 100000}, {16, 100000}, {7, 100000}, {43, 100000}, {58, 100000}, {9, 100000}, {22, 100000}, {30, 100000}, {123, 100000}, {44, 100000}, {67, 100000}, {33, 100000}, {25, 100000}, {51, 100000}, {86, 100000}, {29, 100000}, {97, 100000}, {31, 100000}, {20, 100000}, {62, 100000}, {102, 100000}, {71, 100000}, {15, 100000}, {92, 100000}, {103, 100000}, {18, 100000}, {87, 100000}, {53, 100000}, {90, 100000}, {66, 100000}, {124, 100000}, {19, 100000}, {82, 100000}, {101, 100000}, {60, 100000}, {83, 100000}, {23, 100000}, {63, 100000}, {74, 100000}, {94, 100000}, {73, 100000}, {98, 100000}, {47, 100000}, {118, 100000}, {104, 100000}, {89, 100000}, {2, 100000}, {78, 100000}, {65, 100000}, {4, 100000}, {117, 100000}, {11, 100000}, {6, 100000}, {106, 100000}, {116, 100000}, {27, 100000}, {113, 100000}, {26, 100000}, {93, 100000}, {79, 100000}, {10, 100000}, {24, 100000}, {75, 100000}, {115, 100000}, {72, 100000}, {3, 100000}, {96, 100000}, {111, 100000}, {32, 100000}, {119, 100000}, {41, 100000}, {48, 100000}, {100, 100000}, {105, 100000}, {1, 100000}, {5, 100000}, {35, 100000}, {8, 100000}, {50, 100000}, {42, 100000}, {57, 100000}, {13, 100000}, {59, 100000}, {76, 100000}, {34, 100000}, {38, 100000}, {110, 100000}, {28, 100000}, {77, 100000}, {40, 100000}, {55, 100000}, {108, 100000}, {61, 100000}, {81, 100000}, {36, 100000}, {88, 100000}, {122, 100000}, {114, 100000}, {39, 100000}, {21, 100000}, {54, 100000}, {109, 100000}, {84, 100000}, {121, 100000}, {70, 100000}, {49, 100000}, {69, 100000}, {85, 100000}, {12, 100000}, {68, 100000}, {91, 100000}, {80, 100000}, {46, 100000}, {17, 100000}, {112, 100000}, {99, 100000}, {120, 100000}}, count: 0},
	} {
		count := mostBooked(tc.n, tc.meetings)
		assert.Equal(t, tc.count, count)
	}
}
