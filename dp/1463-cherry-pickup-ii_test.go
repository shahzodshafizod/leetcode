package dp

import (
	"testing"

	"github.com/stretchr/testify/assert"
)

// go test -v -count=1 ./dp/ -run ^TestCherryPickupII$
func TestCherryPickupII(t *testing.T) {
	for _, tc := range []struct {
		grid  [][]int
		count int
	}{
		{grid: [][]int{{3, 1, 1}, {2, 5, 1}, {1, 5, 5}, {2, 1, 1}}, count: 24},
		{grid: [][]int{{13, 14, 37, 49, 64, 98, 4, 11, 47, 81}, {71, 46, 50, 50, 10, 14, 35, 35, 52, 69}}, count: 234},
		{grid: [][]int{{1, 0, 0, 0, 0, 0, 1}, {2, 0, 0, 0, 0, 3, 0}, {2, 0, 9, 0, 0, 0, 0}, {0, 3, 0, 5, 4, 0, 0}, {1, 0, 2, 3, 0, 0, 6}}, count: 28},
		{grid: [][]int{{9, 79}, {49, 85}, {54, 48}, {37, 72}, {68, 14}, {53, 30}, {65, 80}, {94, 18}, {89, 46}, {7, 93}}, count: 1090},
		{grid: [][]int{{1, 0, 0, 0, 0, 0, 0, 0, 0, 2}, {0, 6, 0, 0, 0, 0, 0, 0, 6, 0}, {0, 0, 9, 0, 0, 0, 0, 3, 0, 0}, {0, 0, 0, 8, 0, 0, 5, 0, 0, 0}, {100, 0, 0, 0, 2, 3, 0, 0, 0, 100}}, count: 227},
		{grid: [][]int{{4, 0, 0, 0, 0, 0, 0, 0, 0, 86}, {0, 52, 0, 0, 0, 0, 0, 0, 48, 0}, {0, 0, 94, 0, 0, 0, 0, 74, 0, 0}, {0, 0, 0, 98, 0, 0, 25, 0, 0, 0}, {0, 0, 0, 0, 70, 66, 0, 0, 0, 0}}, count: 617},
		// {grid: [][]int{{0, 40, 0, 0, 0, 0, 0, 0, 93, 0}, {0, 0, 41, 0, 0, 0, 0, 59, 0, 0}, {89, 0, 0, 0, 0, 0, 0, 0, 0, 28}, {0, 32, 0, 0, 0, 0, 0, 0, 80, 0}, {0, 0, 40, 0, 0, 0, 0, 0, 0, 0}, {50, 0, 0, 0, 0, 0, 0, 0, 0, 66}, {0, 90, 0, 0, 0, 0, 0, 0, 11, 0}, {0, 0, 62, 0, 0, 0, 0, 12, 0, 0}, {95, 0, 0, 0, 0, 0, 0, 0, 0, 88}, {0, 31, 0, 0, 0, 0, 0, 0, 26, 0}}, count: 686},
		// {grid: [][]int{{0, 100, 100, 100, 100, 100, 100, 100, 100, 0}, {0, 0, 100, 100, 100, 100, 100, 100, 0, 0}, {0, 0, 0, 100, 100, 100, 100, 0, 0, 0}, {0, 0, 0, 0, 100, 100, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, count: 0},
		// {grid: [][]int{{63, 56, 38, 100, 40, 50, 44, 98, 27, 20}, {13, 98, 92, 31, 46, 29, 81, 2, 37, 3}, {75, 5, 46, 15, 74, 17, 34, 60, 100, 44}, {8, 4, 17, 14, 60, 77, 23, 0, 93, 83}, {41, 40, 5, 2, 73, 80, 71, 100, 82, 39}, {96, 76, 56, 42, 65, 65, 22, 11, 85, 80}, {64, 71, 27, 78, 85, 15, 2, 28, 75, 31}, {51, 16, 30, 65, 54, 68, 12, 5, 48, 1}, {100, 57, 93, 43, 40, 51, 3, 82, 46, 91}, {81, 63, 20, 12, 83, 59, 59, 46, 67, 66}}, count: 1400},
	} {
		count := cherryPickupII(tc.grid)
		assert.Equal(t, tc.count, count)
	}
}
